
<!doctype html>
<html>
<head>
    <title>HxM sensor readings</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3/dist/Chart.min.js"></script>
    <meta charset="utf-8" />
    <meta http-equiv="Content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style type="text/css">
    body {
        background-color: #f0f0f2;
        margin: 0;
        padding: 0;
        font-family: -apple-system, system-ui, BlinkMacSystemFont, "Segoe UI", "Open Sans", "Helvetica Neue", Helvetica, Arial, sans-serif;
        
    }
    div {
        width: 600px;
        margin: 5em auto;
        padding: 2em;
        background-color: #fdfdff;
        border-radius: 0.5em;
        box-shadow: 2px 3px 7px 2px rgba(0,0,0,0.02);
    }
    a:link, a:visited {
        color: #38488f;
        text-decoration: none;
    }
    @media (max-width: 700px) {
        div {
            margin: 0 auto;
            width: auto;
        }
    }
    </style>    
</head>

<body>
<div>
    <h1>Zephyr HxM data monitor</h1>
    <p></p>
    <canvas id="heartRate" width=400, height=400></canvas>
    <canvas id="activity" width=400, height=400></canvas>
    
    <script>
        var chartData = [];
        var activityData = [];
        async function getData(){
            try{
                const response = await fetch("http://10.0.0.202:3000/data")
                const data = await response.json()
                chartData = data.heartRate;
                activityData = data.activityVal;
            }
            catch(error){
                console.log(error)
            }
        }
        labels = []
        for(var i = 0;i<15;i++){
            labels.push(i);
        }
        async function chartIt(){
            await getData();
            var ctx = document.getElementById('heartRate').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels:labels,
                    datasets: [{
                        label: 'Heart Rate',
                        data: chartData,
                        backgroundColor: 
                            'rgba(255, 99, 132, 0.2)',
                        borderColor: 
                            'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
            var ctx = document.getElementById('activity').getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels:labels,
                    datasets: [{
                        label: 'Activity',
                        data: activityData,
                        backgroundColor: 
                            'rgba(0, 99, 132, 0.2)',
                        borderColor: 
                            'rgba(0, 99, 132, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    }
                }
            });
        }
        chartIt();
        setInterval(chartIt, 1000);
        </script>
</div>
</body>
</html>
